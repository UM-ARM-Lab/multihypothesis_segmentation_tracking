<launch>
	<!-- -->
	<arg name="gui" default="true"/>

	<!-- Load the URDF, SRDF and other .yaml configuration files on the param server -->
	<include file="$(find victor_moveit_config)/launch/planning_context.launch">
		<arg name="load_robot_description" value="true"/>
	</include>

	<!-- Startup simulation world -->
	<include file="$(find gazebo_ros)/launch/empty_world.launch">
		<arg name="world_name" value="$(find mps_interactive_segmentation)/worlds/victor_table.world"/>
		<arg name="paused" value="true"/>
		<arg name="gui" value="$(arg gui)"/>
		<arg name="physics" value="ode"/>
		<arg name="verbose" value="true"/>
	</include>

	<!-- Push robot_description to factory and spawn robot in gazebo -->
	<node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" args="-urdf -param robot_description -model victor -J victor_left_arm_joint_4 -1.0 -J victor_right_arm_joint_4 -1.0 -unpause" respawn="false" output="screen" />

	<!-- Robot state publisher -->
	<node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
		<param name="publish_frequency" type="double" value="120.0" />
		<param name="tf_prefix" type="string" value="" />
	</node>

	<!--<node name="camera_body_transform" pkg="tf" type="static_transform_publisher" args="0 0 1.5 0 0.15 0 /victor_root /kinect2_victor_head 10"/>-->
	<node name="gazebo_mocap" pkg="mps_interactive_segmentation" type="gazebo_mocap"/>
	<node name="camera_body_transform" pkg="tf" type="static_transform_publisher" args="0 0 0 0 0 0 1 /mocap_kinect2_victor_head /kinect2_victor_head 10"/>
	<node name="camera_optical_transform" pkg="tf" type="static_transform_publisher" args="0 0 0 -1.57079632679 0 -1.57079632679 /kinect2_victor_head /kinect2_victor_head_optical_frame 10"/>
	<node name="table_transform" pkg="tf" type="static_transform_publisher" args="0 0 1 0 0 -0.7071068 0.7071068 mocap_table table_surface 10"/>
	<node name="world_transform" pkg="tf" type="static_transform_publisher" args="0 0 0 0 0 0 1 world world_origin 10"/>

	<!-- joint_state_controller -->
	<rosparam file="$(find mps_interactive_segmentation)/test/system/config/gazebo_joint_state_controller.yaml" command="load"/>
	<node name="joint_state_controller_spawner" pkg="controller_manager" type="controller_manager" args="spawn joint_state_controller" respawn="false" output="screen"/>

	<!--
	<rosparam file="$(find victor_moveit_config)/config/controllers.yaml" ns="move_group"/>
	<param name="trajectory_execution/execution_duration_monitoring" value="false"/>
	<param name="move_group/moveit_controller_manager" value="moveit_simple_controller_manager/MoveItSimpleControllerManager"/>
	-->
	<!-- Load joint controller configurations from YAML file to parameter server -->
	<param name="move_group/moveit_controller_manager" value="moveit_simple_controller_manager/MoveItSimpleControllerManager"/>
	<rosparam file="$(find mps_interactive_segmentation)/test/system/config/gazebo_controllers.yaml" command="load"/>
	<rosparam file="$(find mps_interactive_segmentation)/test/system/config/moveit_controllers.yaml" command="load"/>
	<node name="independent_controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
	      output="screen" args="--stopped right_arm_controller left_arm_controller "/>
    <node name="dual_controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
          output="screen" args="dual_arm_controller"/>

	<!-- Load the motion planner -->
	<include file="$(find victor_moveit_config)/launch/move_group.launch">
		<arg name="allow_trajectory_execution" value="true"/>
		<arg name="fake_execution" value="false"/>
		<arg name="info" value="true"/>
	</include>

	<!-- Load the motion planner gui -->
	<node name="$(anon rviz)" pkg="rviz" type="rviz" respawn="false"
        args="-d $(find mps_interactive_segmentation)/config/manip.rviz" output="screen">
        <rosparam command="load" file="$(find victor_moveit_config)/config/kinematics.yaml"/>
    </node>

</launch>
